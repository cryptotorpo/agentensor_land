import{m as V,a8 as $,a as m,_ as q,d as F,u as R,t as B,x as h,s as x,M as z,O as A,R as H,c as D,b as E,e as G,o as J,f as P,g as U,h as K,r as L,n as Q,a9 as W}from"./CyvS0nY1.js";import{u as X}from"./wCC9jD3o.js";const s=V(m.ui.strategy,m.ui.textarea,$),Y=F({inheritAttrs:!1,props:{modelValue:{type:[String,Number],default:""},id:{type:String,default:null},name:{type:String,default:null},placeholder:{type:String,default:null},required:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},rows:{type:Number,default:3},maxrows:{type:Number,default:0},autoresize:{type:Boolean,default:!1},autofocus:{type:Boolean,default:!1},autofocusDelay:{type:Number,default:100},resize:{type:Boolean,default:!1},padded:{type:Boolean,default:!0},size:{type:String,default:null,validator(e){return Object.keys(s.size).includes(e)}},color:{type:String,default:()=>s.default.color,validator(e){return[...m.ui.colors,...Object.keys(s.color)].includes(e)}},variant:{type:String,default:()=>s.default.variant,validator(e){return[...Object.keys(s.variant),...Object.values(s.color).flatMap(t=>Object.keys(t))].includes(e)}},textareaClass:{type:String,default:null},class:{type:[String,Object,Array],default:()=>""},ui:{type:Object,default:()=>({})},modelModifiers:{type:Object,default:()=>({})}},emits:["update:modelValue","blur","change"],setup(e,{emit:t}){const{ui:l,attrs:c}=R("textarea",B(e,"ui"),s,B(e,"class")),{emitFormBlur:p,emitFormInput:v,inputId:n,color:g,size:y,name:C}=X(e,s),r=h(x({},e.modelModifiers,{trim:!1,lazy:!1,number:!1})),o=h(null),b=()=>{var a;e.autofocus&&((a=o.value)==null||a.focus())},d=()=>{if(e.autoresize){if(!o.value)return;o.value.rows=e.rows;const a=o.value.style.overflow;o.value.style.overflow="hidden";const u=window.getComputedStyle(o.value),i=parseInt(u.paddingTop),M=parseInt(u.paddingBottom),k=i+M,N=parseInt(u.lineHeight),{scrollHeight:T}=o.value,f=(T-k)/N;f>e.rows&&(o.value.rows=e.maxrows?Math.min(f,e.maxrows):f),o.value.style.overflow=a}},w=a=>{r.value.trim&&(a=a.trim()),r.value.number&&(a=W(a)),t("update:modelValue",a),v()},I=a=>{d(),r.value.lazy||w(a.target.value)},S=a=>{const u=a.target.value;t("change",u),r.value.lazy&&w(u),r.value.trim&&(a.target.value=u.trim())},O=a=>{t("blur",a),p()};z(()=>{setTimeout(()=>{b()},e.autofocusDelay)}),A(()=>e.modelValue,()=>{H(d)}),z(()=>{setTimeout(()=>{b(),d()},100)});const j=D(()=>{var u,i;const a=((i=(u=l.value.color)==null?void 0:u[g.value])==null?void 0:i[e.variant])||l.value.variant[e.variant];return E(G(l.value.base,l.value.form,l.value.rounded,l.value.placeholder,l.value.size[y.value],e.padded?l.value.padding[y.value]:"p-0",a==null?void 0:a.replaceAll("{color}",g.value),!e.resize&&"resize-none"),e.textareaClass)});return{ui:l,attrs:c,name:C,inputId:n,textarea:o,textareaClass:j,onInput:I,onChange:S,onBlur:O}}}),Z=["id","value","name","rows","required","disabled","placeholder"];function _(e,t,l,c,p,v){return J(),P("div",{class:Q(e.ui.wrapper)},[U("textarea",K({id:e.inputId,ref:"textarea",value:e.modelValue,name:e.name,rows:e.rows,required:e.required,disabled:e.disabled,placeholder:e.placeholder,class:e.textareaClass},e.attrs,{onInput:t[0]||(t[0]=(...n)=>e.onInput&&e.onInput(...n)),onBlur:t[1]||(t[1]=(...n)=>e.onBlur&&e.onBlur(...n)),onChange:t[2]||(t[2]=(...n)=>e.onChange&&e.onChange(...n))}),null,16,Z),L(e.$slots,"default")],2)}const te=q(Y,[["render",_]]);export{te as _};
